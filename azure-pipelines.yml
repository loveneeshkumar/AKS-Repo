# azure-pipelines.yml

trigger: none   # Manual run only

pool:
  name: love2   # Your self-hosted agent pool

variables:
  TF_WORKING_DIR: '$(System.DefaultWorkingDirectory)/AKS'

steps:

  # 1️⃣ Install Terraform using ms-devlabs extension
# 1️⃣ Install Terraform
- task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@1
  inputs:
    terraformVersion: '1.13.0'

# 2️⃣ Terraform Init
- task: TerraformTask@5
  displayName: 'Terraform Init'
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: '$(TF_WORKING_DIR)'
    backendServiceArm: 'Loveneesh_2'
    backendAzureRmResourceGroupName: 'rg-aks'
    backendAzureRmStorageAccountName: 'love12345'
    backendAzureRmContainerName: 'loveneesh'
    backendAzureRmKey: 'love.tfstate'
    backendAzureRmUseAzureAdAuth: true

# 3️⃣ Terraform Fmt
- task: TerraformTask@5
  displayName: 'Terraform Fmt'
  inputs:
    provider: 'azurerm'
    command: 'custom'
    workingDirectory: '$(TF_WORKING_DIR)'
    outputTo: 'console'
    customCommand: 'fmt'
    environmentServiceNameAzureRM: 'Loveneesh_2'

# 4️⃣ Terraform Validate
- task: TerraformTask@5
  displayName: 'Terraform Validate'
  inputs:
    provider: 'azurerm'
    command: 'validate'
    workingDirectory: '$(TF_WORKING_DIR)'

# 5️⃣ Terraform Plan
- task: TerraformTask@5
  displayName: 'Terraform Plan'
  inputs:
    provider: 'azurerm'
    command: 'plan'
    workingDirectory: '$(TF_WORKING_DIR)'
    environmentServiceNameAzureRM: 'Loveneesh_2'
